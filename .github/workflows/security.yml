name: Security Scan

on:
  schedule:
    # Run security scan daily at 2 AM UTC
    - cron: '0 2 * * *'
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  security-scan:
    name: Security Vulnerability Scan
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup Node.js
      uses: actions/setup-node@v6
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: |
        npm install --legacy-peer-deps
        npm ls

    - name: Run npm audit
      run: npm audit --audit-level=moderate

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v4
      with:
        languages: javascript

    - name: Autobuild
      uses: github/codeql-action/autobuild@v4

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v4
      with:
        category: "/language:javascript"

    - name: Run Snyk Security Scan
      if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository
      uses: snyk/actions/node@master
      continue-on-error: true
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high

  license-check:
    name: License Compliance Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup Node.js
      uses: actions/setup-node@v6
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: |
        npm install --legacy-peer-deps
        npm ls

    - name: Check licenses
      run: npx license-checker --onlyAllow 'MIT;Apache-2.0;BSD-2-Clause;BSD-3-Clause;ISC'

  secret-scan:
    name: Secret Scanning
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      with:
        fetch-depth: 0

    - name: Run Gitleaks
      uses: gitleaks/gitleaks-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITLEAKS_LICENSE: true

    - name: Run TruffleHog
      uses: trufflesecurity/trufflehog@main
      continue-on-error: true
      with:
        path: ./
        base: ${{ github.event.before || github.event.pull_request.base.sha }}
        head: ${{ github.event.after || github.event.pull_request.head.sha }}
        extra_args: --regex --entropy=False

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout PR
      uses: actions/checkout@v5
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v6
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: |
        npm install --legacy-peer-deps
        npm ls

    - name: Review dependencies
      run: npm outdated

    - name: Comment on PR
      if: failure()
      uses: actions/github-script@v8
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'ðŸš¨ **Security Review Required**\n\nThis PR introduces dependency changes that require security review.\n\nPlease:\n- [ ] Review all new dependencies\n- [ ] Check for known vulnerabilities\n- [ ] Verify licensing compliance\n- [ ] Test functionality thoroughly'
          })